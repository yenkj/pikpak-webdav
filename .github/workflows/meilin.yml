name: Release For Meilin
on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release'
        required: true
        default: 'v0.0.2'
jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [
          { target: "x86_64-unknown-linux-musl", image_tag: "x86_64-musl", wheel: true },
          { target: "i686-unknown-linux-musl", image_tag: "i686-musl", wheel: true },
          { target: "aarch64-unknown-linux-musl", image_tag: "aarch64-musl", wheel: true },
          { target: "armv7-unknown-linux-musleabihf", image_tag: "armv7-musleabihf", wheel: true },
          { target: "armv7-unknown-linux-musleabi", image_tag: "armv7-musleabi", wheel: false },
          { target: "arm-unknown-linux-musleabihf", image_tag: "arm-musleabihf", wheel: false },
          { target: "arm-unknown-linux-musleabi", image_tag: "arm-musleabi", wheel: false },
        ]
    container:
      image: docker://messense/rust-musl-cross:${{ matrix.platform.image_tag }}
      env:
        CFLAGS_armv7_unknown_linux_musleabihf: '-mfpu=vfpv3-d16'
    steps:
      - uses: actions/checkout@v2
      - name: Build wheels - manylinux
        uses: messense/maturin-action@main
        with:
          target: ${{ matrix.platform.target }}
          manylinux: auto
          container: off
          args:  --release -o dist --strip
      - name: Build wheels - musllinux
        if: matrix.platform.wheel
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          manylinux: musllinux_1_1
          container: off
          args: --release --out dist --strip
      - name: Upload wheels
        if: matrix.platform.wheel
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist
          if-no-files-found: error
      - name: Upx compress binary
        uses: crazy-max/ghaction-upx@v1
        with:
          version: latest
          files: target/${{ matrix.platform.target }}/release/pikpak-webdav
      - name: Upload binary artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.platform.target }}-bin
          path: target/${{ matrix.platform.target }}/release/pikpak-webdav
          if-no-files-found: error
      - name: Archive binary
        run: |
          cd target/${{ matrix.platform.target }}/release
          tar czvf pikpak-webdav-${{ github.event.inputs.tag }}.${{ matrix.platform.target }}.tar.gz pikpak-webdav
          shasum -a 256 pikpak-webdav-${{ github.event.inputs.tag }}.${{ matrix.platform.target }}.tar.gz > pikpak-webdav-${{ github.event.inputs.tag }}.${{ matrix.platform.target }}.tar.gz.sha256
          cd -
      - name: Upload binary to GitHub Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/${{ matrix.platform.target }}/release/pikpak-webdav*.tar.gz*
          file_glob: true
          overwrite: true
          tag: "refs/tags/${{ github.event.inputs.tag }}"
  linux-others:
      runs-on: ubuntu-latest
      strategy:
        matrix:
          platform:
            - target: "armv5te-unknown-linux-musleabi"
              image_tag: "armv5te-musleabi"
              cargo_extra_args: --no-default-features --features rustls-tls
            - target: "mips-unknown-linux-musl"
              image_tag: "mips-musl"
              cargo_extra_args: --no-default-features --features native-tls-vendored
            - target: "mipsel-unknown-linux-musl"
              image_tag: "mipsel-musl"
              cargo_extra_args: --no-default-features --features native-tls-vendored
      container:
        image: docker://messense/rust-musl-cross:${{ matrix.platform.image_tag }}
      steps:
        - uses: actions/checkout@v2
        - name: Build
          env:
            RUSTFLAGS: -C target-feature=+crt-static -C link-arg=-s
          run: |
            cargo build --release --target ${{ matrix.platform.target }} ${{ matrix.platform.cargo_extra_args }}
        - name: Upx compress binary
          uses: crazy-max/ghaction-upx@v1
          with:
            version: v3.95  # v3.96 breaks mipsel, https://github.com/upx/upx/issues/504
            files: target/${{ matrix.platform.target }}/release/pikpak-webdav
        - name: Upload binary artifacts
          uses: actions/upload-artifact@v2
          with:
            name: ${{ matrix.platform.target }}-bin
            path: target/${{ matrix.platform.target }}/release/pikpak-webdav
            if-no-files-found: error
        - name: Archive binary
          run: |
            cd target/${{ matrix.platform.target }}/release
            tar czvf pikpak-webdav-${{ github.event.inputs.tag }}.${{ matrix.platform.target }}.tar.gz pikpak-webdav
            shasum -a 256 pikpak-webdav-${{ github.event.inputs.tag }}.${{ matrix.platform.target }}.tar.gz > pikpak-webdav-${{ github.event.inputs.tag }}.${{ matrix.platform.target }}.tar.gz.sha256
            cd -
        - name: Upload binary to GitHub Release
          uses: svenstaro/upload-release-action@v2
          with:
            repo_token: ${{ secrets.GITHUB_TOKEN }}
            file: target/${{ matrix.platform.target }}/release/pikpak-webdav*.tar.gz*
            file_glob: true
            overwrite: true
            tag: "refs/tags/${{ github.event.inputs.tag }}"
  merlin:
    name: Merlin Package
    runs-on: ubuntu-latest
    needs: [ linux, linux-others ]
    environment: Merlin
    strategy:
      fail-fast: false
      matrix:
        platform:
          - type: arm380
            name: arm380-armv7
            target: armv7-unknown-linux-musleabi
          - type: arm380
            name: arm380-armhf
            target: armv7-unknown-linux-musleabihf
          - type: arm384
            name: arm384-armv5te
            target: armv5te-unknown-linux-musleabi
          - type: arm384
            name: arm384-armv7
            target: armv7-unknown-linux-musleabi
          - type: arm384
            name: arm384-armhf
            target: armv7-unknown-linux-musleabihf
          - type: arm384
            name: arm384-aarch64
            target: aarch64-unknown-linux-musl
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.platform.target }}-bin
      - name: Build package
        run: |
          mv pikpak-webdav merlin/${{ matrix.platform.type }}/bin/
          cd merlin && python3 build.py ${{ matrix.platform.type }} && mv pikpakwebdav.tar.gz pikpakwebdav-merlin-${{ matrix.platform.name }}.tar.gz
      - name: Archive package
        uses: actions/upload-artifact@v2
        with:
          name: pikpak-webdav-merlin-${{ matrix.platform.name }}
          path: merlin/pikpakwebdav-merlin-${{ matrix.platform.name }}.tar.gz
          if-no-files-found: error

      - name: Upload binary to GitHub Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: merlin/pikpakwebdav-merlin-${{ matrix.platform.name }}.tar.gz
          file_glob: true
          overwrite: true
          tag: "refs/tags/${{ github.event.inputs.tag }}"